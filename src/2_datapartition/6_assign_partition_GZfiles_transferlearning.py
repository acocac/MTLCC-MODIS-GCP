"""
Generate partitions fromn GRID of TFrecords

Example invocation::

    python 2_datapartition/3_assign_partition_GZfiles.py
        -r /home/xx/
        -y 2009
        -p 24
        -b 3
        -f 0

acocac@gmail.com
"""

import geopandas as gpd
import os
import numpy as np
import glob
import pandas as pd
import configparser
import pygeoj
import argparse
import re

parser = argparse.ArgumentParser(description='Export gee data to visualise in the GEE code editor')

parser.add_argument('-r','--rootdir', type=str, required=True, help='Dir with input TFrecords.gz generated by GEE')
parser.add_argument('-y','--tyear', type=str, required=True, help='Target year')
parser.add_argument('-p','--psize', type=int, required=True, help='patch size value set of the MODIS 250-m data')
parser.add_argument('-b','--blocks', type=int, required=True, help='blocks per patch')
parser.add_argument('-ref','--reference', type=str, required=True, help='reference map')

def parfiles(indir):
    predtiles = np.loadtxt(os.path.join(indir, 'pred.tileids'), dtype='str')
    return(predtiles)

def bbox_geojson(fn):
    geojson = pygeoj.load(fn)

    x_all = []
    y_all = []
    id_all = []

    for feature in geojson:
        x = feature.geometry.bbox[0]
        y = feature.geometry.bbox[-1]
        id_n = feature.properties['id_fn']
        x_all.append(x)
        y_all.append(y)
        id_all.append(id_n)

    return (id_all, x_all, y_all)

if __name__ == '__main__':
    args = parser.parse_args()
    rootdir = args.rootdir
    tyear = args.tyear
    psize = args.psize
    blocks = args.blocks
    reference = args.reference

    geodatadir = os.path.join(rootdir, 'geodata','split',str(psize),'raw','geojson')
    projectdir = os.path.join(rootdir, 'combine', str(psize))

    #create geotransform
    if not os.path.isfile(os.path.join(projectdir, 'geotransforms.csv')):

        id_n, x, y = bbox_geojson(os.path.join(geodatadir,'merge_all.geojson'))

        geo_df = pd.DataFrame(id_n)

        geo_df['1'] = x
        geo_df['2'] = 0.0020833333
        geo_df['3'] = 0
        geo_df['4'] = y
        geo_df['5'] = 0
        geo_df['6'] = -0.0020833333
        geo_df['7'] = 4326

        geo_df.to_csv(os.path.join(projectdir, 'geotransforms.csv'), index=None, header=None)